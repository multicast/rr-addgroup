#!/usr/bin/env bash
test -z "$(type -p)" || { echo bash required; exit 1; }
set -e
set -u
source "${RRCONFINC}"

# command line argument has preference
test $# -eq 1 && ADDGROUP_NAME="${1}"

# check group name
ADDGROUP_NAME="${ADDGROUP_NAME:=${GROUP_NAME:=/unset/}}"
if [[ "${ADDGROUP_NAME}" = "/unset/" ]]; then
  fail "Missing group name to add."
fi

# check group gid
ADDGROUP_GIDFORCE="${ADDGROUP_GIDFORCE:=}"
ADDGROUP_GID="${ADDGROUP_GID:=${GROUP_GID:=${ADDGROUP_GIDFORCE:=}}}"

grpent=$(getent group "${ADDGROUP_NAME}") || {

  # no group id provided or forced:
  test -z "${ADDGROUP_GID}" &&
    exec addgroup "${ADDGROUP_NAME}"

  # gid set from env or forced env:
  exec addgroup --gid "${ADDGROUP_GID}" "${ADDGROUP_NAME}"
}

## group exists
##
test -z "${ADDGROUP_GID}" &&
  exit 0 # no gid requested or forced

currentgid="$(echo $grpent | awk -F: '{print$3}')"
test "${ADDGROUP_GID}" -eq "${currentgid}" &&
  exit 0
logv "Group ${ADDGROUP_NAME} already exist with GID=${currentgid}"

test -z "${ADDGROUP_GIDFORCE}" &&
  exit 0
fail "Cannot change group ${ADDGROUP_NAME} GID to ${ADDGROUP_GIDFORCE}"
